<?xml version="1.0"?>
<ruleset name="StadlyCodingStandard">
    <description>Coding standard for Stadly PHP projects</description>

    <!-- Use Generic standard -->
    <rule ref="Generic.Arrays.ArrayIndent">
		<exclude name="Generic.Arrays.ArrayIndent.CloseBraceNotNewLine"/>
    </rule>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <!-- <rule ref="Generic.Arrays.DisallowShortArraySyntax"/> -->
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <!-- <rule ref="Generic.Classes.OpeningBraceSameLine"/> -->
    <rule ref="Generic.CodeAnalysis.AssignmentInCondition"/>
    <rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <!-- <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/> -->
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.DocComment">
		<exclude name="Generic.Commenting.DocComment.MissingShort"/>
		<exclude name="Generic.Commenting.DocComment.NonParamGroup"/>
		<exclude name="Generic.Commenting.DocComment.TagValueIndent"/>
    </rule>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Debug.CSSLint"/>
    <rule ref="Generic.Debug.ClosureLinter"/>
    <rule ref="Generic.Debug.ESLint"/>
    <rule ref="Generic.Debug.JSHint"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.EndFileNewline"/>
    <!-- <rule ref="Generic.Files.EndFileNoNewline"/> -->
    <rule ref="Generic.Files.InlineHTML"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>
    <!-- <rule ref="Generic.Files.LowercasedFilename"/> -->
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>
    <rule ref="Generic.Files.OneObjectStructurePerFile"/>
    <rule ref="Generic.Files.OneTraitPerFile"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <!-- <rule ref="Generic.Formatting.MultipleStatementAlignment"/> -->
    <rule ref="Generic.Formatting.NoSpaceAfterCast"/>
    <rule ref="Generic.Formatting.SpaceAfterCast">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>
    <!-- <rule ref="Generic.Formatting.SpaceBeforeCast"/> -->
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <!-- <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/> -->
    <!-- <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/> -->
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <properties>
            <property name="strict" value="false"/>
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <!-- <rule ref="Generic.PHP.ClosingPHPTag"/> -->
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowAlternativePHPTags"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DiscourageGoto"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.SAPIUsage"/>
    <rule ref="Generic.PHP.Syntax"/>
    <!-- <rule ref="Generic.PHP.UpperCaseConstant"/> -->
    <!-- <rule ref="Generic.Strings.UnnecessaryStringConcat"/> -->
    <rule ref="Generic.VersionControl.GitMergeConflict"/>
    <rule ref="Generic.VersionControl.SubversionProperties"/>
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
    <!-- <rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/> -->
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
    <rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>

    <!-- Use PEAR standard -->
    <rule ref="PEAR.Classes.ClassDeclaration"/>
    <!-- <rule ref="PEAR.Commenting.ClassComment"/> -->
    <!-- <rule ref="PEAR.Commenting.FileComment"/> -->
    <!-- <rule ref="PEAR.Commenting.FunctionComment"/> -->
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition">
		<exclude name="PEAR.ControlStructures.MultiLineCondition.StartWithBoolean"/>
        <properties>
            <property name="indent" value="0"/>
        </properties>
    </rule>
    <rule ref="PEAR.Files.IncludingFile"/>
    <rule ref="PEAR.Formatting.MultiLineAssignment"/>
    <rule ref="PEAR.Functions.FunctionCallSignature">
		<exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>
		<exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>
		<exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
    </rule>
    <rule ref="PEAR.Functions.FunctionDeclaration"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.NamingConventions.ValidFunctionName">
		<exclude name="PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="PEAR.NamingConventions.ValidVariableName">
		<exclude name="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
    <!-- <rule ref="PEAR.WhiteSpace.ScopeIndent"/> -->

    <!-- Use PSR1 standard -->
    <rule ref="PSR1"/>

    <!-- Use PSR2 standard -->
    <rule ref="PSR2"/>

    <!-- Use PSR12 standard -->
    <rule ref="PSR12"/>

    <!-- Use Squiz standard -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration">
		<exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.SpaceInEmptyArray"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned"/>
    </rule>
    <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace"/>
    <rule ref="Squiz.CSS.ClassDefinitionNameSpacing"/>
    <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace"/>
    <rule ref="Squiz.CSS.ColonSpacing"/>
    <rule ref="Squiz.CSS.ColourDefinition"/>
    <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions"/>
    <rule ref="Squiz.CSS.DuplicateClassDefinition"/>
    <rule ref="Squiz.CSS.DuplicateStyleDefinition"/>
    <rule ref="Squiz.CSS.EmptyClassDefinition"/>
    <rule ref="Squiz.CSS.EmptyStyleDefinition"/>
    <rule ref="Squiz.CSS.ForbiddenStyles"/>
    <rule ref="Squiz.CSS.Indentation"/>
    <rule ref="Squiz.CSS.LowercaseStyleDefinition"/>
    <rule ref="Squiz.CSS.MissingColon"/>
    <rule ref="Squiz.CSS.NamedColours"/>
    <rule ref="Squiz.CSS.Opacity"/>
    <rule ref="Squiz.CSS.SemicolonSpacing"/>
    <rule ref="Squiz.CSS.ShorthandSize"/>
    <rule ref="Squiz.Classes.ClassDeclaration"/>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="Squiz.Classes.DuplicateProperty"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>
    <rule ref="Squiz.Classes.ValidClassName"/>
    <rule ref="Squiz.Commenting.BlockComment">
		<exclude name="Squiz.Commenting.BlockComment.SingleLine"/>
		<exclude name="Squiz.Commenting.BlockComment.WrongStart"/>
    </rule>
    <rule ref="Squiz.Commenting.ClassComment">
		<exclude name="Squiz.Commenting.ClassComment.Missing"/>
		<exclude name="Squiz.Commenting.ClassComment.TagNotAllowed"/>
    </rule>
    <!-- <rule ref="Squiz.Commenting.ClosingDeclarationComment"/> -->
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>
    <rule ref="Squiz.Commenting.FileComment">
		<exclude name="Squiz.Commenting.FileComment.Missing"/>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment">
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectTypeHint"/>
		<exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/>
		<exclude name="Squiz.Commenting.FunctionComment.Missing"/>
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamTag"/>
		<exclude name="Squiz.Commenting.FunctionComment.MissingReturn"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/><!-- https://github.com/squizlabs/PHP_CodeSniffer/issues/2530 -->
		<exclude name="Squiz.Commenting.FunctionComment.ParamNameNoMatch"/><!-- https://github.com/squizlabs/PHP_CodeSniffer/issues/2530 -->
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamName"/>
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
    </rule>
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag">
		<exclude name="Squiz.Commenting.FunctionCommentThrowTag.Missing"/>
		<exclude name="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber"/>
    </rule>
    <rule ref="Squiz.Commenting.InlineComment">
		<exclude name="Squiz.Commenting.InlineComment.DocBlock"/>
		<exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>
		<exclude name="Squiz.Commenting.InlineComment.NotCapital"/>
    </rule>
    <!-- <rule ref="Squiz.Commenting.LongConditionClosingComment"> -->
    <!-- <rule ref="Squiz.Commenting.PostStatementComment"/> -->
    <rule ref="Squiz.Commenting.VariableComment">
		<exclude name="Squiz.Commenting.VariableComment.IncorrectVarType"/>
    </rule>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <!-- <rule ref="Squiz.ControlStructures.ElseIfDeclaration"/> -->
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.InlineIfDeclaration">
		<exclude name="Squiz.ControlStructures.InlineIfDeclaration.NoBrackets"/>
    </rule>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration">
		<exclude name="Squiz.ControlStructures.SwitchDeclaration.BreakIndent"/>
		<exclude name="Squiz.ControlStructures.SwitchDeclaration.MissingDefault"/>
		<exclude name="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterBreak"/>
    </rule>
    <rule ref="Squiz.Debug.JSLint"/>
    <rule ref="Squiz.Debug.JavaScriptLint"/>
    <rule ref="Squiz.Files.FileExtension">
		<exclude name="Squiz.Files.FileExtension.ClassFound"/>
    </rule>
    <rule ref="Squiz.Formatting.OperatorBracket">
		<exclude name="Squiz.Formatting.OperatorBracket.MissingBrackets"/>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing"/>
    <rule ref="Squiz.Functions.FunctionDuplicateArgument"/>
    <rule ref="Squiz.Functions.GlobalFunction"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>
    <rule ref="Squiz.NamingConventions.ValidFunctionName">
		<exclude name="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="Squiz.NamingConventions.ValidVariableName">
		<exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="Squiz.Objects.DisallowObjectStringIndex"/>
    <!-- <rule ref="Squiz.Objects.ObjectInstantiation"/> -->
    <rule ref="Squiz.Objects.ObjectMemberComma"/>
    <rule ref="Squiz.Operators.ComparisonOperatorUsage">
		<exclude name="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue"/>
		<exclude name="Squiz.Operators.ComparisonOperatorUsage.NotAllowed"/>
    </rule>
    <rule ref="Squiz.Operators.IncrementDecrementUsage"/>
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>
    <rule ref="Squiz.PHP.CommentedOutCode"/>
    <!-- <rule ref="Squiz.PHP.DisallowBooleanStatement"/> -->
    <!-- <rule ref="Squiz.PHP.DisallowComparisonAssignment"/> -->
    <!-- <rule ref="Squiz.PHP.DisallowInlineIf"/> -->
    <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
    <rule ref="Squiz.PHP.DiscouragedFunctions"/>
    <rule ref="Squiz.PHP.EmbeddedPhp"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.Heredoc"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.Strings.EchoedStrings"/>
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
    <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace">
		<exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose"/>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
    <!-- <rule ref="Squiz.WhiteSpace.FunctionSpacing"/> -->
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <properties>
            <property name="spacingBeforeFirst" value="0"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
</ruleset>
