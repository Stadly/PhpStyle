<?xml version="1.0"?>
<ruleset name="StadlyCodingStandard">
    <description>Coding standard for Stadly PHP projects</description>

    <!-- Use Generic standard -->
    <rule ref="Generic.Arrays.ArrayIndent">
		<exclude name="Generic.Arrays.ArrayIndent.CloseBraceNotNewLine"/>
    </rule>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <!-- <rule ref="Generic.Arrays.DisallowShortArraySyntax"/> -->
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <!-- <rule ref="Generic.Classes.OpeningBraceSameLine"/> -->
    <rule ref="Generic.CodeAnalysis.AssignmentInCondition"/>
    <rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <!-- <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/> -->
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.DocComment">
		<exclude name="Generic.Commenting.DocComment.MissingShort"/>
		<exclude name="Generic.Commenting.DocComment.NonParamGroup"/>
		<exclude name="Generic.Commenting.DocComment.TagValueIndent"/>
    </rule>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Debug.CSSLint"/>
    <rule ref="Generic.Debug.ClosureLinter"/>
    <rule ref="Generic.Debug.ESLint"/>
    <rule ref="Generic.Debug.JSHint"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.EndFileNewline"/>
    <!-- <rule ref="Generic.Files.EndFileNoNewline"/> -->
    <rule ref="Generic.Files.InlineHTML"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>
    <!-- <rule ref="Generic.Files.LowercasedFilename"/> -->
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>
    <rule ref="Generic.Files.OneObjectStructurePerFile"/>
    <rule ref="Generic.Files.OneTraitPerFile"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <!-- <rule ref="Generic.Formatting.MultipleStatementAlignment"/> -->
    <rule ref="Generic.Formatting.NoSpaceAfterCast"/>
    <rule ref="Generic.Formatting.SpaceAfterCast">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>
    <!-- <rule ref="Generic.Formatting.SpaceBeforeCast"/> -->
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <!-- <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/> -->
    <!-- <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/> -->
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <properties>
            <property name="strict" value="false"/>
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <!-- <rule ref="Generic.PHP.ClosingPHPTag"/> -->
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowAlternativePHPTags"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DiscourageGoto"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.SAPIUsage"/>
    <rule ref="Generic.PHP.Syntax"/>
    <!-- <rule ref="Generic.PHP.UpperCaseConstant"/> -->
    <!-- <rule ref="Generic.Strings.UnnecessaryStringConcat"/> -->
    <rule ref="Generic.VersionControl.GitMergeConflict"/>
    <rule ref="Generic.VersionControl.SubversionProperties"/>
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
    <!-- <rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/> -->
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
    <rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>

    <!-- Use PEAR standard -->
    <rule ref="PEAR.Classes.ClassDeclaration"/>
    <!-- <rule ref="PEAR.Commenting.ClassComment"/> -->
    <!-- <rule ref="PEAR.Commenting.FileComment"/> -->
    <!-- <rule ref="PEAR.Commenting.FunctionComment"/> -->
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition">
		<exclude name="PEAR.ControlStructures.MultiLineCondition.StartWithBoolean"/>
        <properties>
            <property name="indent" value="0"/>
        </properties>
    </rule>
    <rule ref="PEAR.Files.IncludingFile"/>
    <rule ref="PEAR.Formatting.MultiLineAssignment"/>
    <rule ref="PEAR.Functions.FunctionCallSignature">
		<exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>
		<exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>
		<exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
    </rule>
    <rule ref="PEAR.Functions.FunctionDeclaration"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.NamingConventions.ValidFunctionName">
		<exclude name="PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="PEAR.NamingConventions.ValidVariableName">
		<exclude name="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
    <!-- <rule ref="PEAR.WhiteSpace.ScopeIndent"/> -->

    <!-- Use PSR1 standard -->
    <rule ref="PSR1"/>

    <!-- Use PSR2 standard -->
    <rule ref="PSR2"/>
</ruleset>
